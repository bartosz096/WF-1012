const { Builder, By, Key, until } = require('selenium-webdriver')
const assert = require('assert')

describe('Test1', function() {
  setTimeout(100000)
  let driver
  let vars
  beforeEach(async function() {
    let chrome = require('selenium-webdriver/chrome')
    driver = await new Builder()
    .forBrowser('chrome')
    .setChromeOptions(new chrome.Options().headless())
    .build()
    vars = {}
  })
  afterEach(async function() {
    await driver.quit();
  })
  it('checkingCorrectEmail', async function() {
    await driver.get("http://localhost:3000/")
    vars["email"] = "User_1@miten.pl"
    await driver.findElement(By.id("emails")).click()
    await driver.findElement(By.id("emails")).sendKeys(vars["email"])
    await driver.findElement(By.id("passwords")).click()
    await driver.findElement(By.id("passwords")).sendKeys("Pass1!")
    await driver.findElement(By.id("buttonLogin")).click()
    assert(await driver.switchTo().alert().getText() == "zalogowano poprawnie")
    await driver.switchTo().alert().accept()
    await driver.findElement(By.id("emailInfo")).click()
    assert(await driver.switchTo().alert().getText() == vars["email"])
    await driver.switchTo().alert().accept()
    await driver.close()
  })
  it('createUser+login', async function() {
    await driver.get("http://localhost:3000/")
    await driver.findElement(By.id("emails")).sendKeys("A1aa@aa.aa")
    await driver.findElement(By.id("passwords")).sendKeys("Zaq1!")
    await driver.findElement(By.id("buttonRegister")).click()
    assert(await driver.switchTo().alert().getText() == "stworzono uzytkownika")
    await driver.switchTo().alert().accept()
    await driver.findElement(By.id("buttonLogin")).click()
    assert(await driver.switchTo().alert().getText() == "zalogowano poprawnie")
    await driver.switchTo().alert().accept()
    await driver.close()
  })
  it('emailValidation', async function() {
    await driver.get("http://localhost:3000/")
    {
      const elements = await driver.findElements(By.id("Form1"))
      assert(elements.length)
    }
    {
      const elements = await driver.findElements(By.id("emails"))
      assert(elements.length)
    }
    {
      const elements = await driver.findElements(By.id("passwords"))
      assert(elements.length)
    }
    {
      const elements = await driver.findElements(By.id("buttonRegister"))
      assert(elements.length)
    }
    {
      const elements = await driver.findElements(By.id("buttonLogin"))
      assert(elements.length)
    }
    await driver.findElement(By.id("emails")).sendKeys("Aaa")
    await driver.findElement(By.id("passwords")).sendKeys("Zaq1!")
    await driver.findElement(By.id("Form1")).click()
    await driver.findElement(By.id("buttonRegister")).click()
    assert(await driver.switchTo().alert().getText() == "niepoprawny email")
    await driver.switchTo().alert().accept()
    await driver.findElement(By.id("emails")).clear()
    await driver.findElement(By.id("emails")).sendKeys("Aaa@aa")
    await driver.findElement(By.id("buttonRegister")).click()
    assert(await driver.switchTo().alert().getText() == "niepoprawny email")
    await driver.switchTo().alert().accept()
    await driver.findElement(By.id("Form1")).click()
    await driver.findElement(By.id("emails")).clear()
    await driver.findElement(By.id("emails")).sendKeys("Aaa@aa.")
    await driver.findElement(By.id("buttonRegister")).click()
    assert(await driver.switchTo().alert().getText() == "niepoprawny email")
    await driver.switchTo().alert().accept()
    await driver.findElement(By.id("emails")).clear()
    await driver.findElement(By.id("emails")).sendKeys("Aaa@aa.22")
    await driver.findElement(By.id("buttonRegister")).click()
    assert(await driver.switchTo().alert().getText() == "niepoprawny email")
    await driver.switchTo().alert().accept()
    await driver.findElement(By.id("emails")).clear()
    await driver.findElement(By.id("emails")).sendKeys("Aaa@aa.22aa")
    await driver.findElement(By.id("buttonRegister")).click()
    assert(await driver.switchTo().alert().getText() == "niepoprawny email")
    await driver.switchTo().alert().accept()
    await driver.findElement(By.id("emails")).clear()
    await driver.findElement(By.id("emails")).sendKeys("Aaa@aa.2aa")
    await driver.findElement(By.id("buttonRegister")).click()
    assert(await driver.switchTo().alert().getText() == "niepoprawny email")
    await driver.switchTo().alert().accept()
    await driver.findElement(By.id("emails")).clear()
    await driver.findElement(By.id("emails")).sendKeys("Aaa@aa.aa")
    await driver.findElement(By.id("buttonRegister")).click()
    assert(await driver.switchTo().alert().getText() == "stworzono uzytkownika")
    await driver.switchTo().alert().accept()
    await driver.findElement(By.id("emails")).clear()
    await driver.findElement(By.id("emails")).sendKeys("Aa%a@aa.aa")
    await driver.findElement(By.id("buttonRegister")).click()
    assert(await driver.switchTo().alert().getText() == "stworzono uzytkownika")
    await driver.switchTo().alert().accept()
    await driver.findElement(By.id("emails")).clear()
    await driver.findElement(By.id("emails")).sendKeys("Aa%a@aa2.aa")
    await driver.findElement(By.id("buttonRegister")).click()
    assert(await driver.switchTo().alert().getText() == "stworzono uzytkownika")
    await driver.switchTo().alert().accept()
    await driver.close()
  })
  it('loginCorrect', async function() {
    await driver.get("http://localhost:3000/")
    await driver.findElement(By.id("emails")).sendKeys("User_1@miten.pl")
    await driver.findElement(By.id("passwords")).sendKeys("Pass1!")
    await driver.findElement(By.id("buttonLogin")).click()
    assert(await driver.switchTo().alert().getText() == "zalogowano poprawnie")
    await driver.switchTo().alert().accept()
    await driver.close()
  })
  it('loginIncorrect', async function() {
    await driver.get("http://localhost:3000/")
    await driver.findElement(By.id("emails")).sendKeys("User_1@miten.pl")
    await driver.findElement(By.id("passwords")).sendKeys("zaq")
    await driver.findElement(By.id("buttonLogin")).click()
    assert(await driver.switchTo().alert().getText() == "niepoprawne haslo")
    await driver.switchTo().alert().accept()
    await driver.findElement(By.id("passwords")).clear()
    await driver.findElement(By.id("passwords")).sendKeys("zaq!")
    await driver.findElement(By.id("buttonLogin")).click()
    assert(await driver.switchTo().alert().getText() == "niepoprawne haslo")
    await driver.switchTo().alert().accept()
    await driver.findElement(By.id("passwords")).clear()
    await driver.findElement(By.id("passwords")).sendKeys("Pass1")
    await driver.findElement(By.id("buttonLogin")).click()
    assert(await driver.switchTo().alert().getText() == "niepoprawne haslo")
    await driver.switchTo().alert().accept()
    await driver.findElement(By.id("emails")).clear()
    await driver.findElement(By.id("emails")).sendKeys("User_1@miten.p")
    await driver.findElement(By.id("buttonLogin")).click()
    assert(await driver.switchTo().alert().getText() == "niepoprawne haslo")
    await driver.switchTo().alert().accept()
    await driver.findElement(By.id("passwords")).clear()
    await driver.findElement(By.id("passwords")).sendKeys("Pass1!")
    await driver.findElement(By.id("buttonLogin")).click()
    assert(await driver.switchTo().alert().getText() == "niepoprawne haslo")
    await driver.switchTo().alert().accept()
    await driver.findElement(By.id("emails")).clear()
    await driver.findElement(By.id("emails")).sendKeys("User_1@miten.pl")
    await driver.findElement(By.id("buttonLogin")).click()
    assert(await driver.switchTo().alert().getText() == "zalogowano poprawnie")
    await driver.switchTo().alert().accept()
    await driver.close()
  })
  it('passValidation', async function() {
    await driver.get("http://localhost:3000/")
    {
      const elements = await driver.findElements(By.id("Form1"))
      assert(elements.length)
    }
    {
      const elements = await driver.findElements(By.id("emails"))
      assert(elements.length)
    }
    {
      const elements = await driver.findElements(By.id("passwords"))
      assert(elements.length)
    }
    {
      const elements = await driver.findElements(By.id("buttonRegister"))
      assert(elements.length)
    }
    {
      const elements = await driver.findElements(By.id("buttonLogin"))
      assert(elements.length)
    }
    await driver.findElement(By.id("emails")).sendKeys("Aaa@aa.aa")
    await driver.findElement(By.id("buttonRegister")).click()
    assert(await driver.switchTo().alert().getText() == "haslo musi zawierac min. 5 znaków, jeden małą i wielka litera oraz jeden znak specjalny")
    await driver.switchTo().alert().accept()
    await driver.findElement(By.id("passwords")).clear()
    await driver.findElement(By.id("passwords")).sendKeys("aaa1")
    await driver.findElement(By.id("buttonRegister")).click()
    assert(await driver.switchTo().alert().getText() == "haslo musi zawierac min. 5 znaków, jeden małą i wielka litera oraz jeden znak specjalny")
    await driver.switchTo().alert().accept()
    await driver.findElement(By.id("passwords")).clear()
    await driver.findElement(By.id("passwords")).sendKeys("aaa1!a")
    await driver.findElement(By.id("buttonRegister")).click()
    assert(await driver.switchTo().alert().getText() == "haslo musi zawierac min. 5 znaków, jeden małą i wielka litera oraz jeden znak specjalny")
    await driver.switchTo().alert().accept()
    await driver.findElement(By.id("passwords")).clear()
    await driver.findElement(By.id("passwords")).sendKeys("aaa1!aa")
    await driver.findElement(By.id("buttonLogin")).click()
    assert(await driver.switchTo().alert().getText() == "niepoprawne haslo")
    await driver.switchTo().alert().accept()
    await driver.findElement(By.id("buttonRegister")).click()
    assert(await driver.switchTo().alert().getText() == "haslo musi zawierac min. 5 znaków, jeden małą i wielka litera oraz jeden znak specjalny")
    await driver.switchTo().alert().accept()
    await driver.findElement(By.id("passwords")).clear()
    await driver.findElement(By.id("passwords")).sendKeys("zaaA1@")
    await driver.findElement(By.id("buttonRegister")).click()
    assert(await driver.switchTo().alert().getText() == "stworzono uzytkownika")
    await driver.switchTo().alert().accept()
    await driver.close()
  })
  it('login+logout', async function() {
    await driver.get("http://localhost:3000/")
    await driver.findElement(By.id("emails")).sendKeys("User_1@miten.pl")
    await driver.findElement(By.id("passwords")).sendKeys("Pass1!")
    await driver.findElement(By.id("buttonLogin")).click()
    assert(await driver.switchTo().alert().getText() == "zalogowano poprawnie")
    await driver.switchTo().alert().accept()
    await driver.findElement(By.id("emailInfo")).click()
    assert(await driver.switchTo().alert().getText() == "User_1@miten.pl")
    await driver.switchTo().alert().accept()
    await driver.findElement(By.id("buttonLogout")).click()
    assert(await driver.switchTo().alert().getText() == "wylogowano poprawnie")
    await driver.switchTo().alert().accept()
    await driver.findElement(By.id("emails")).sendKeys("Aaa@aa.aa")
    await driver.findElement(By.id("passwords")).sendKeys("Zaq1!")
    await driver.findElement(By.id("buttonRegister")).click()
    assert(await driver.switchTo().alert().getText() == "stworzono uzytkownika")
    await driver.switchTo().alert().accept()
    await driver.findElement(By.id("buttonLogin")).click()
    assert(await driver.switchTo().alert().getText() == "zalogowano poprawnie")
    await driver.switchTo().alert().accept()
    await driver.findElement(By.id("buttonLogout")).click()
    assert(await driver.switchTo().alert().getText() == "wylogowano poprawnie")
    await driver.switchTo().alert().accept()
    await driver.findElement(By.id("emails")).sendKeys("Aaa@aa.aa")
    await driver.findElement(By.id("passwords")).sendKeys("Zaq1!")
    await driver.findElement(By.id("buttonLogin")).click()
    assert(await driver.switchTo().alert().getText() == "zalogowano poprawnie")
    await driver.switchTo().alert().accept()
    await driver.findElement(By.id("emailInfo")).click()
    assert(await driver.switchTo().alert().getText() == "Aaa@aa.aa")
    await driver.switchTo().alert().accept()
    await driver.close()
  })
})
